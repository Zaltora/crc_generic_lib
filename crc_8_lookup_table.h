/**
 * CRC GENERIC LIBRARY.
 *
 * Copyright (c) 2016 Zaltora (https://github.com/Zaltora)
 *
 * BSD Licensed as described in the file LICENSE
 */

#ifndef CRC_8_LOOKUP_TABLE_H_
#define CRC_8_LOOKUP_TABLE_H_

//The CHECK value is the result of making the checksum of the char[] = "123456789";
//List of preset value available
/*
Algorithm            Check    Poly    Init   RefIn   RefOut   XorOut
CRC-8                 0xF4    0x07    0x00    false   false   0x00
CRC-8/CDMA2000        0xDA    0x9B    0xFF    false   false   0x00
CRC-8/DARC            0x15    0x39    0x00    true    true    0x00
CRC-8/DVB-S2          0xBC    0xD5    0x00    false   false   0x00
CRC-8/EBU             0x97    0x1D    0xFF    true    true    0x00
CRC-8/I-CODE          0x7E    0x1D    0xFD    false   false   0x00
CRC-8/ITU             0xA1    0x07    0x00    false   false   0x55
CRC-8/MAXIM           0xA1    0x31    0x00    true    true    0x00
CRC-8/ROHC            0xD0    0x07    0xFF    true    true    0x00
CRC-8/WCDMA           0x25    0x9B    0x00    true    true    0x00
*/
//Array name List
/*
crc_8_tab
crc_8_tab_CDMA2000
crc_8_tab_DARC
crc_8_tab_DVBS2
crc_8_tab_EBU
crc_8_tab_ICODE
crc_8_tab_ITU
crc_8_tab_MAXIM
crc_8_tab_ROHC
crc_8_tab_WCDMA
*/

/*
 *  poly=0x07 init=0x00 direct=true refin=false refout=false xorout=0x00 check=0xF4
 */
static const crc_8 crc_8_tab[256]  = {
        0x00, 0x07, 0x0E, 0x09, 0x1C, 0x1B, 0x12, 0x15,
        0x38, 0x3F, 0x36, 0x31, 0x24, 0x23, 0x2A, 0x2D,
        0x70, 0x77, 0x7E, 0x79, 0x6C, 0x6B, 0x62, 0x65,
        0x48, 0x4F, 0x46, 0x41, 0x54, 0x53, 0x5A, 0x5D,
        0xE0, 0xE7, 0xEE, 0xE9, 0xFC, 0xFB, 0xF2, 0xF5,
        0xD8, 0xDF, 0xD6, 0xD1, 0xC4, 0xC3, 0xCA, 0xCD,
        0x90, 0x97, 0x9E, 0x99, 0x8C, 0x8B, 0x82, 0x85,
        0xA8, 0xAF, 0xA6, 0xA1, 0xB4, 0xB3, 0xBA, 0xBD,
        0xC7, 0xC0, 0xC9, 0xCE, 0xDB, 0xDC, 0xD5, 0xD2,
        0xFF, 0xF8, 0xF1, 0xF6, 0xE3, 0xE4, 0xED, 0xEA,
        0xB7, 0xB0, 0xB9, 0xBE, 0xAB, 0xAC, 0xA5, 0xA2,
        0x8F, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9D, 0x9A,
        0x27, 0x20, 0x29, 0x2E, 0x3B, 0x3C, 0x35, 0x32,
        0x1F, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0D, 0x0A,
        0x57, 0x50, 0x59, 0x5E, 0x4B, 0x4C, 0x45, 0x42,
        0x6F, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7D, 0x7A,
        0x89, 0x8E, 0x87, 0x80, 0x95, 0x92, 0x9B, 0x9C,
        0xB1, 0xB6, 0xBF, 0xB8, 0xAD, 0xAA, 0xA3, 0xA4,
        0xF9, 0xFE, 0xF7, 0xF0, 0xE5, 0xE2, 0xEB, 0xEC,
        0xC1, 0xC6, 0xCF, 0xC8, 0xDD, 0xDA, 0xD3, 0xD4,
        0x69, 0x6E, 0x67, 0x60, 0x75, 0x72, 0x7B, 0x7C,
        0x51, 0x56, 0x5F, 0x58, 0x4D, 0x4A, 0x43, 0x44,
        0x19, 0x1E, 0x17, 0x10, 0x05, 0x02, 0x0B, 0x0C,
        0x21, 0x26, 0x2F, 0x28, 0x3D, 0x3A, 0x33, 0x34,
        0x4E, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5C, 0x5B,
        0x76, 0x71, 0x78, 0x7F, 0x6A, 0x6D, 0x64, 0x63,
        0x3E, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2C, 0x2B,
        0x06, 0x01, 0x08, 0x0F, 0x1A, 0x1D, 0x14, 0x13,
        0xAE, 0xA9, 0xA0, 0xA7, 0xB2, 0xB5, 0xBC, 0xBB,
        0x96, 0x91, 0x98, 0x9F, 0x8A, 0x8D, 0x84, 0x83,
        0xDE, 0xD9, 0xD0, 0xD7, 0xC2, 0xC5, 0xCC, 0xCB,
        0xE6, 0xE1, 0xE8, 0xEF, 0xFA, 0xFD, 0xF4, 0xF3,
};

/*
 *  poly=0x9B init=0xFF direct=true refin=false refout=false xorout=0x00 check=0xDA
 */
static const crc_8 crc_8_tab_CDMA2000[256]  = {
        0x00, 0x9B, 0xAD, 0x36, 0xC1, 0x5A, 0x6C, 0xF7,
        0x19, 0x82, 0xB4, 0x2F, 0xD8, 0x43, 0x75, 0xEE,
        0x32, 0xA9, 0x9F, 0x04, 0xF3, 0x68, 0x5E, 0xC5,
        0x2B, 0xB0, 0x86, 0x1D, 0xEA, 0x71, 0x47, 0xDC,
        0x64, 0xFF, 0xC9, 0x52, 0xA5, 0x3E, 0x08, 0x93,
        0x7D, 0xE6, 0xD0, 0x4B, 0xBC, 0x27, 0x11, 0x8A,
        0x56, 0xCD, 0xFB, 0x60, 0x97, 0x0C, 0x3A, 0xA1,
        0x4F, 0xD4, 0xE2, 0x79, 0x8E, 0x15, 0x23, 0xB8,
        0xC8, 0x53, 0x65, 0xFE, 0x09, 0x92, 0xA4, 0x3F,
        0xD1, 0x4A, 0x7C, 0xE7, 0x10, 0x8B, 0xBD, 0x26,
        0xFA, 0x61, 0x57, 0xCC, 0x3B, 0xA0, 0x96, 0x0D,
        0xE3, 0x78, 0x4E, 0xD5, 0x22, 0xB9, 0x8F, 0x14,
        0xAC, 0x37, 0x01, 0x9A, 0x6D, 0xF6, 0xC0, 0x5B,
        0xB5, 0x2E, 0x18, 0x83, 0x74, 0xEF, 0xD9, 0x42,
        0x9E, 0x05, 0x33, 0xA8, 0x5F, 0xC4, 0xF2, 0x69,
        0x87, 0x1C, 0x2A, 0xB1, 0x46, 0xDD, 0xEB, 0x70,
        0x0B, 0x90, 0xA6, 0x3D, 0xCA, 0x51, 0x67, 0xFC,
        0x12, 0x89, 0xBF, 0x24, 0xD3, 0x48, 0x7E, 0xE5,
        0x39, 0xA2, 0x94, 0x0F, 0xF8, 0x63, 0x55, 0xCE,
        0x20, 0xBB, 0x8D, 0x16, 0xE1, 0x7A, 0x4C, 0xD7,
        0x6F, 0xF4, 0xC2, 0x59, 0xAE, 0x35, 0x03, 0x98,
        0x76, 0xED, 0xDB, 0x40, 0xB7, 0x2C, 0x1A, 0x81,
        0x5D, 0xC6, 0xF0, 0x6B, 0x9C, 0x07, 0x31, 0xAA,
        0x44, 0xDF, 0xE9, 0x72, 0x85, 0x1E, 0x28, 0xB3,
        0xC3, 0x58, 0x6E, 0xF5, 0x02, 0x99, 0xAF, 0x34,
        0xDA, 0x41, 0x77, 0xEC, 0x1B, 0x80, 0xB6, 0x2D,
        0xF1, 0x6A, 0x5C, 0xC7, 0x30, 0xAB, 0x9D, 0x06,
        0xE8, 0x73, 0x45, 0xDE, 0x29, 0xB2, 0x84, 0x1F,
        0xA7, 0x3C, 0x0A, 0x91, 0x66, 0xFD, 0xCB, 0x50,
        0xBE, 0x25, 0x13, 0x88, 0x7F, 0xE4, 0xD2, 0x49,
        0x95, 0x0E, 0x38, 0xA3, 0x54, 0xCF, 0xF9, 0x62,
        0x8C, 0x17, 0x21, 0xBA, 0x4D, 0xD6, 0xE0, 0x7B,
};

/*
 *  poly=0x39 init=0x00 direct=true refin=true refout=true xorout=0x00 check=0x15
 */
static const crc_8 crc_8_tab_DARC[256]  = {
        0x00, 0x72, 0xE4, 0x96, 0xF1, 0x83, 0x15, 0x67,
        0xDB, 0xA9, 0x3F, 0x4D, 0x2A, 0x58, 0xCE, 0xBC,
        0x8F, 0xFD, 0x6B, 0x19, 0x7E, 0x0C, 0x9A, 0xE8,
        0x54, 0x26, 0xB0, 0xC2, 0xA5, 0xD7, 0x41, 0x33,
        0x27, 0x55, 0xC3, 0xB1, 0xD6, 0xA4, 0x32, 0x40,
        0xFC, 0x8E, 0x18, 0x6A, 0x0D, 0x7F, 0xE9, 0x9B,
        0xA8, 0xDA, 0x4C, 0x3E, 0x59, 0x2B, 0xBD, 0xCF,
        0x73, 0x01, 0x97, 0xE5, 0x82, 0xF0, 0x66, 0x14,
        0x4E, 0x3C, 0xAA, 0xD8, 0xBF, 0xCD, 0x5B, 0x29,
        0x95, 0xE7, 0x71, 0x03, 0x64, 0x16, 0x80, 0xF2,
        0xC1, 0xB3, 0x25, 0x57, 0x30, 0x42, 0xD4, 0xA6,
        0x1A, 0x68, 0xFE, 0x8C, 0xEB, 0x99, 0x0F, 0x7D,
        0x69, 0x1B, 0x8D, 0xFF, 0x98, 0xEA, 0x7C, 0x0E,
        0xB2, 0xC0, 0x56, 0x24, 0x43, 0x31, 0xA7, 0xD5,
        0xE6, 0x94, 0x02, 0x70, 0x17, 0x65, 0xF3, 0x81,
        0x3D, 0x4F, 0xD9, 0xAB, 0xCC, 0xBE, 0x28, 0x5A,
        0x9C, 0xEE, 0x78, 0x0A, 0x6D, 0x1F, 0x89, 0xFB,
        0x47, 0x35, 0xA3, 0xD1, 0xB6, 0xC4, 0x52, 0x20,
        0x13, 0x61, 0xF7, 0x85, 0xE2, 0x90, 0x06, 0x74,
        0xC8, 0xBA, 0x2C, 0x5E, 0x39, 0x4B, 0xDD, 0xAF,
        0xBB, 0xC9, 0x5F, 0x2D, 0x4A, 0x38, 0xAE, 0xDC,
        0x60, 0x12, 0x84, 0xF6, 0x91, 0xE3, 0x75, 0x07,
        0x34, 0x46, 0xD0, 0xA2, 0xC5, 0xB7, 0x21, 0x53,
        0xEF, 0x9D, 0x0B, 0x79, 0x1E, 0x6C, 0xFA, 0x88,
        0xD2, 0xA0, 0x36, 0x44, 0x23, 0x51, 0xC7, 0xB5,
        0x09, 0x7B, 0xED, 0x9F, 0xF8, 0x8A, 0x1C, 0x6E,
        0x5D, 0x2F, 0xB9, 0xCB, 0xAC, 0xDE, 0x48, 0x3A,
        0x86, 0xF4, 0x62, 0x10, 0x77, 0x05, 0x93, 0xE1,
        0xF5, 0x87, 0x11, 0x63, 0x04, 0x76, 0xE0, 0x92,
        0x2E, 0x5C, 0xCA, 0xB8, 0xDF, 0xAD, 0x3B, 0x49,
        0x7A, 0x08, 0x9E, 0xEC, 0x8B, 0xF9, 0x6F, 0x1D,
        0xA1, 0xD3, 0x45, 0x37, 0x50, 0x22, 0xB4, 0xC6,
};

/*
 *  poly=0xD5 init=0x00 direct=true refin=false refout=false xorout=0x00 check=0xBC
 */
static const crc_8 crc_8_tab_DVBS2[256]  = {
        0x00, 0xD5, 0x7F, 0xAA, 0xFE, 0x2B, 0x81, 0x54,
        0x29, 0xFC, 0x56, 0x83, 0xD7, 0x02, 0xA8, 0x7D,
        0x52, 0x87, 0x2D, 0xF8, 0xAC, 0x79, 0xD3, 0x06,
        0x7B, 0xAE, 0x04, 0xD1, 0x85, 0x50, 0xFA, 0x2F,
        0xA4, 0x71, 0xDB, 0x0E, 0x5A, 0x8F, 0x25, 0xF0,
        0x8D, 0x58, 0xF2, 0x27, 0x73, 0xA6, 0x0C, 0xD9,
        0xF6, 0x23, 0x89, 0x5C, 0x08, 0xDD, 0x77, 0xA2,
        0xDF, 0x0A, 0xA0, 0x75, 0x21, 0xF4, 0x5E, 0x8B,
        0x9D, 0x48, 0xE2, 0x37, 0x63, 0xB6, 0x1C, 0xC9,
        0xB4, 0x61, 0xCB, 0x1E, 0x4A, 0x9F, 0x35, 0xE0,
        0xCF, 0x1A, 0xB0, 0x65, 0x31, 0xE4, 0x4E, 0x9B,
        0xE6, 0x33, 0x99, 0x4C, 0x18, 0xCD, 0x67, 0xB2,
        0x39, 0xEC, 0x46, 0x93, 0xC7, 0x12, 0xB8, 0x6D,
        0x10, 0xC5, 0x6F, 0xBA, 0xEE, 0x3B, 0x91, 0x44,
        0x6B, 0xBE, 0x14, 0xC1, 0x95, 0x40, 0xEA, 0x3F,
        0x42, 0x97, 0x3D, 0xE8, 0xBC, 0x69, 0xC3, 0x16,
        0xEF, 0x3A, 0x90, 0x45, 0x11, 0xC4, 0x6E, 0xBB,
        0xC6, 0x13, 0xB9, 0x6C, 0x38, 0xED, 0x47, 0x92,
        0xBD, 0x68, 0xC2, 0x17, 0x43, 0x96, 0x3C, 0xE9,
        0x94, 0x41, 0xEB, 0x3E, 0x6A, 0xBF, 0x15, 0xC0,
        0x4B, 0x9E, 0x34, 0xE1, 0xB5, 0x60, 0xCA, 0x1F,
        0x62, 0xB7, 0x1D, 0xC8, 0x9C, 0x49, 0xE3, 0x36,
        0x19, 0xCC, 0x66, 0xB3, 0xE7, 0x32, 0x98, 0x4D,
        0x30, 0xE5, 0x4F, 0x9A, 0xCE, 0x1B, 0xB1, 0x64,
        0x72, 0xA7, 0x0D, 0xD8, 0x8C, 0x59, 0xF3, 0x26,
        0x5B, 0x8E, 0x24, 0xF1, 0xA5, 0x70, 0xDA, 0x0F,
        0x20, 0xF5, 0x5F, 0x8A, 0xDE, 0x0B, 0xA1, 0x74,
        0x09, 0xDC, 0x76, 0xA3, 0xF7, 0x22, 0x88, 0x5D,
        0xD6, 0x03, 0xA9, 0x7C, 0x28, 0xFD, 0x57, 0x82,
        0xFF, 0x2A, 0x80, 0x55, 0x01, 0xD4, 0x7E, 0xAB,
        0x84, 0x51, 0xFB, 0x2E, 0x7A, 0xAF, 0x05, 0xD0,
        0xAD, 0x78, 0xD2, 0x07, 0x53, 0x86, 0x2C, 0xF9,
};

/*
 *  poly=0x1D init=0xFF direct=true refin=true refout=true xorout=0x00 check=0x97
 */
static const crc_8 crc_8_tab_EBU[256]  = {
        0x00, 0x64, 0xC8, 0xAC, 0xE1, 0x85, 0x29, 0x4D,
        0xB3, 0xD7, 0x7B, 0x1F, 0x52, 0x36, 0x9A, 0xFE,
        0x17, 0x73, 0xDF, 0xBB, 0xF6, 0x92, 0x3E, 0x5A,
        0xA4, 0xC0, 0x6C, 0x08, 0x45, 0x21, 0x8D, 0xE9,
        0x2E, 0x4A, 0xE6, 0x82, 0xCF, 0xAB, 0x07, 0x63,
        0x9D, 0xF9, 0x55, 0x31, 0x7C, 0x18, 0xB4, 0xD0,
        0x39, 0x5D, 0xF1, 0x95, 0xD8, 0xBC, 0x10, 0x74,
        0x8A, 0xEE, 0x42, 0x26, 0x6B, 0x0F, 0xA3, 0xC7,
        0x5C, 0x38, 0x94, 0xF0, 0xBD, 0xD9, 0x75, 0x11,
        0xEF, 0x8B, 0x27, 0x43, 0x0E, 0x6A, 0xC6, 0xA2,
        0x4B, 0x2F, 0x83, 0xE7, 0xAA, 0xCE, 0x62, 0x06,
        0xF8, 0x9C, 0x30, 0x54, 0x19, 0x7D, 0xD1, 0xB5,
        0x72, 0x16, 0xBA, 0xDE, 0x93, 0xF7, 0x5B, 0x3F,
        0xC1, 0xA5, 0x09, 0x6D, 0x20, 0x44, 0xE8, 0x8C,
        0x65, 0x01, 0xAD, 0xC9, 0x84, 0xE0, 0x4C, 0x28,
        0xD6, 0xB2, 0x1E, 0x7A, 0x37, 0x53, 0xFF, 0x9B,
        0xB8, 0xDC, 0x70, 0x14, 0x59, 0x3D, 0x91, 0xF5,
        0x0B, 0x6F, 0xC3, 0xA7, 0xEA, 0x8E, 0x22, 0x46,
        0xAF, 0xCB, 0x67, 0x03, 0x4E, 0x2A, 0x86, 0xE2,
        0x1C, 0x78, 0xD4, 0xB0, 0xFD, 0x99, 0x35, 0x51,
        0x96, 0xF2, 0x5E, 0x3A, 0x77, 0x13, 0xBF, 0xDB,
        0x25, 0x41, 0xED, 0x89, 0xC4, 0xA0, 0x0C, 0x68,
        0x81, 0xE5, 0x49, 0x2D, 0x60, 0x04, 0xA8, 0xCC,
        0x32, 0x56, 0xFA, 0x9E, 0xD3, 0xB7, 0x1B, 0x7F,
        0xE4, 0x80, 0x2C, 0x48, 0x05, 0x61, 0xCD, 0xA9,
        0x57, 0x33, 0x9F, 0xFB, 0xB6, 0xD2, 0x7E, 0x1A,
        0xF3, 0x97, 0x3B, 0x5F, 0x12, 0x76, 0xDA, 0xBE,
        0x40, 0x24, 0x88, 0xEC, 0xA1, 0xC5, 0x69, 0x0D,
        0xCA, 0xAE, 0x02, 0x66, 0x2B, 0x4F, 0xE3, 0x87,
        0x79, 0x1D, 0xB1, 0xD5, 0x98, 0xFC, 0x50, 0x34,
        0xDD, 0xB9, 0x15, 0x71, 0x3C, 0x58, 0xF4, 0x90,
        0x6E, 0x0A, 0xA6, 0xC2, 0x8F, 0xEB, 0x47, 0x23,
};

/*
 *  poly=0x1D init=0xFD direct=true refin=false refout=false xorout=0x00 check=0x7E
 */
static const crc_8 crc_8_tab_ICODE[256]  = {
        0x00, 0x1D, 0x3A, 0x27, 0x74, 0x69, 0x4E, 0x53,
        0xE8, 0xF5, 0xD2, 0xCF, 0x9C, 0x81, 0xA6, 0xBB,
        0xCD, 0xD0, 0xF7, 0xEA, 0xB9, 0xA4, 0x83, 0x9E,
        0x25, 0x38, 0x1F, 0x02, 0x51, 0x4C, 0x6B, 0x76,
        0x87, 0x9A, 0xBD, 0xA0, 0xF3, 0xEE, 0xC9, 0xD4,
        0x6F, 0x72, 0x55, 0x48, 0x1B, 0x06, 0x21, 0x3C,
        0x4A, 0x57, 0x70, 0x6D, 0x3E, 0x23, 0x04, 0x19,
        0xA2, 0xBF, 0x98, 0x85, 0xD6, 0xCB, 0xEC, 0xF1,
        0x13, 0x0E, 0x29, 0x34, 0x67, 0x7A, 0x5D, 0x40,
        0xFB, 0xE6, 0xC1, 0xDC, 0x8F, 0x92, 0xB5, 0xA8,
        0xDE, 0xC3, 0xE4, 0xF9, 0xAA, 0xB7, 0x90, 0x8D,
        0x36, 0x2B, 0x0C, 0x11, 0x42, 0x5F, 0x78, 0x65,
        0x94, 0x89, 0xAE, 0xB3, 0xE0, 0xFD, 0xDA, 0xC7,
        0x7C, 0x61, 0x46, 0x5B, 0x08, 0x15, 0x32, 0x2F,
        0x59, 0x44, 0x63, 0x7E, 0x2D, 0x30, 0x17, 0x0A,
        0xB1, 0xAC, 0x8B, 0x96, 0xC5, 0xD8, 0xFF, 0xE2,
        0x26, 0x3B, 0x1C, 0x01, 0x52, 0x4F, 0x68, 0x75,
        0xCE, 0xD3, 0xF4, 0xE9, 0xBA, 0xA7, 0x80, 0x9D,
        0xEB, 0xF6, 0xD1, 0xCC, 0x9F, 0x82, 0xA5, 0xB8,
        0x03, 0x1E, 0x39, 0x24, 0x77, 0x6A, 0x4D, 0x50,
        0xA1, 0xBC, 0x9B, 0x86, 0xD5, 0xC8, 0xEF, 0xF2,
        0x49, 0x54, 0x73, 0x6E, 0x3D, 0x20, 0x07, 0x1A,
        0x6C, 0x71, 0x56, 0x4B, 0x18, 0x05, 0x22, 0x3F,
        0x84, 0x99, 0xBE, 0xA3, 0xF0, 0xED, 0xCA, 0xD7,
        0x35, 0x28, 0x0F, 0x12, 0x41, 0x5C, 0x7B, 0x66,
        0xDD, 0xC0, 0xE7, 0xFA, 0xA9, 0xB4, 0x93, 0x8E,
        0xF8, 0xE5, 0xC2, 0xDF, 0x8C, 0x91, 0xB6, 0xAB,
        0x10, 0x0D, 0x2A, 0x37, 0x64, 0x79, 0x5E, 0x43,
        0xB2, 0xAF, 0x88, 0x95, 0xC6, 0xDB, 0xFC, 0xE1,
        0x5A, 0x47, 0x60, 0x7D, 0x2E, 0x33, 0x14, 0x09,
        0x7F, 0x62, 0x45, 0x58, 0x0B, 0x16, 0x31, 0x2C,
        0x97, 0x8A, 0xAD, 0xB0, 0xE3, 0xFE, 0xD9, 0xC4,
};

/*
 *  poly=0x07 init=0x00 direct=true refin=false refout=false xorout=0x55 check=0xA1
 */
#define crc_8_tab_ITU crc_8_tab

/*
 *  poly=0x31 init=0x00 direct=true refin=true refout=true xorout=0x00 check=0xA1
 */
static const crc_8 crc_8_tab_MAXIM[256]  = {
        0x00, 0x5E, 0xBC, 0xE2, 0x61, 0x3F, 0xDD, 0x83,
        0xC2, 0x9C, 0x7E, 0x20, 0xA3, 0xFD, 0x1F, 0x41,
        0x9D, 0xC3, 0x21, 0x7F, 0xFC, 0xA2, 0x40, 0x1E,
        0x5F, 0x01, 0xE3, 0xBD, 0x3E, 0x60, 0x82, 0xDC,
        0x23, 0x7D, 0x9F, 0xC1, 0x42, 0x1C, 0xFE, 0xA0,
        0xE1, 0xBF, 0x5D, 0x03, 0x80, 0xDE, 0x3C, 0x62,
        0xBE, 0xE0, 0x02, 0x5C, 0xDF, 0x81, 0x63, 0x3D,
        0x7C, 0x22, 0xC0, 0x9E, 0x1D, 0x43, 0xA1, 0xFF,
        0x46, 0x18, 0xFA, 0xA4, 0x27, 0x79, 0x9B, 0xC5,
        0x84, 0xDA, 0x38, 0x66, 0xE5, 0xBB, 0x59, 0x07,
        0xDB, 0x85, 0x67, 0x39, 0xBA, 0xE4, 0x06, 0x58,
        0x19, 0x47, 0xA5, 0xFB, 0x78, 0x26, 0xC4, 0x9A,
        0x65, 0x3B, 0xD9, 0x87, 0x04, 0x5A, 0xB8, 0xE6,
        0xA7, 0xF9, 0x1B, 0x45, 0xC6, 0x98, 0x7A, 0x24,
        0xF8, 0xA6, 0x44, 0x1A, 0x99, 0xC7, 0x25, 0x7B,
        0x3A, 0x64, 0x86, 0xD8, 0x5B, 0x05, 0xE7, 0xB9,
        0x8C, 0xD2, 0x30, 0x6E, 0xED, 0xB3, 0x51, 0x0F,
        0x4E, 0x10, 0xF2, 0xAC, 0x2F, 0x71, 0x93, 0xCD,
        0x11, 0x4F, 0xAD, 0xF3, 0x70, 0x2E, 0xCC, 0x92,
        0xD3, 0x8D, 0x6F, 0x31, 0xB2, 0xEC, 0x0E, 0x50,
        0xAF, 0xF1, 0x13, 0x4D, 0xCE, 0x90, 0x72, 0x2C,
        0x6D, 0x33, 0xD1, 0x8F, 0x0C, 0x52, 0xB0, 0xEE,
        0x32, 0x6C, 0x8E, 0xD0, 0x53, 0x0D, 0xEF, 0xB1,
        0xF0, 0xAE, 0x4C, 0x12, 0x91, 0xCF, 0x2D, 0x73,
        0xCA, 0x94, 0x76, 0x28, 0xAB, 0xF5, 0x17, 0x49,
        0x08, 0x56, 0xB4, 0xEA, 0x69, 0x37, 0xD5, 0x8B,
        0x57, 0x09, 0xEB, 0xB5, 0x36, 0x68, 0x8A, 0xD4,
        0x95, 0xCB, 0x29, 0x77, 0xF4, 0xAA, 0x48, 0x16,
        0xE9, 0xB7, 0x55, 0x0B, 0x88, 0xD6, 0x34, 0x6A,
        0x2B, 0x75, 0x97, 0xC9, 0x4A, 0x14, 0xF6, 0xA8,
        0x74, 0x2A, 0xC8, 0x96, 0x15, 0x4B, 0xA9, 0xF7,
        0xB6, 0xE8, 0x0A, 0x54, 0xD7, 0x89, 0x6B, 0x35,
};

/*
 *  poly=0x07 init=0xFF direct=true refin=true refout=true xorout=0x00 check=0xD0
 */
static const crc_8 crc_8_tab_ROHC[256]  = {
        0x00, 0x91, 0xE3, 0x72, 0x07, 0x96, 0xE4, 0x75,
        0x0E, 0x9F, 0xED, 0x7C, 0x09, 0x98, 0xEA, 0x7B,
        0x1C, 0x8D, 0xFF, 0x6E, 0x1B, 0x8A, 0xF8, 0x69,
        0x12, 0x83, 0xF1, 0x60, 0x15, 0x84, 0xF6, 0x67,
        0x38, 0xA9, 0xDB, 0x4A, 0x3F, 0xAE, 0xDC, 0x4D,
        0x36, 0xA7, 0xD5, 0x44, 0x31, 0xA0, 0xD2, 0x43,
        0x24, 0xB5, 0xC7, 0x56, 0x23, 0xB2, 0xC0, 0x51,
        0x2A, 0xBB, 0xC9, 0x58, 0x2D, 0xBC, 0xCE, 0x5F,
        0x70, 0xE1, 0x93, 0x02, 0x77, 0xE6, 0x94, 0x05,
        0x7E, 0xEF, 0x9D, 0x0C, 0x79, 0xE8, 0x9A, 0x0B,
        0x6C, 0xFD, 0x8F, 0x1E, 0x6B, 0xFA, 0x88, 0x19,
        0x62, 0xF3, 0x81, 0x10, 0x65, 0xF4, 0x86, 0x17,
        0x48, 0xD9, 0xAB, 0x3A, 0x4F, 0xDE, 0xAC, 0x3D,
        0x46, 0xD7, 0xA5, 0x34, 0x41, 0xD0, 0xA2, 0x33,
        0x54, 0xC5, 0xB7, 0x26, 0x53, 0xC2, 0xB0, 0x21,
        0x5A, 0xCB, 0xB9, 0x28, 0x5D, 0xCC, 0xBE, 0x2F,
        0xE0, 0x71, 0x03, 0x92, 0xE7, 0x76, 0x04, 0x95,
        0xEE, 0x7F, 0x0D, 0x9C, 0xE9, 0x78, 0x0A, 0x9B,
        0xFC, 0x6D, 0x1F, 0x8E, 0xFB, 0x6A, 0x18, 0x89,
        0xF2, 0x63, 0x11, 0x80, 0xF5, 0x64, 0x16, 0x87,
        0xD8, 0x49, 0x3B, 0xAA, 0xDF, 0x4E, 0x3C, 0xAD,
        0xD6, 0x47, 0x35, 0xA4, 0xD1, 0x40, 0x32, 0xA3,
        0xC4, 0x55, 0x27, 0xB6, 0xC3, 0x52, 0x20, 0xB1,
        0xCA, 0x5B, 0x29, 0xB8, 0xCD, 0x5C, 0x2E, 0xBF,
        0x90, 0x01, 0x73, 0xE2, 0x97, 0x06, 0x74, 0xE5,
        0x9E, 0x0F, 0x7D, 0xEC, 0x99, 0x08, 0x7A, 0xEB,
        0x8C, 0x1D, 0x6F, 0xFE, 0x8B, 0x1A, 0x68, 0xF9,
        0x82, 0x13, 0x61, 0xF0, 0x85, 0x14, 0x66, 0xF7,
        0xA8, 0x39, 0x4B, 0xDA, 0xAF, 0x3E, 0x4C, 0xDD,
        0xA6, 0x37, 0x45, 0xD4, 0xA1, 0x30, 0x42, 0xD3,
        0xB4, 0x25, 0x57, 0xC6, 0xB3, 0x22, 0x50, 0xC1,
        0xBA, 0x2B, 0x59, 0xC8, 0xBD, 0x2C, 0x5E, 0xCF,
};

/*
 *  poly=0x9B init=0x00 direct=true refin=true refout=true xorout=0x00 check=0x25
 */
static const crc_8 crc_8_tab_WCDMA[256]  = {
        0x00, 0xD0, 0x13, 0xC3, 0x26, 0xF6, 0x35, 0xE5,
        0x4C, 0x9C, 0x5F, 0x8F, 0x6A, 0xBA, 0x79, 0xA9,
        0x98, 0x48, 0x8B, 0x5B, 0xBE, 0x6E, 0xAD, 0x7D,
        0xD4, 0x04, 0xC7, 0x17, 0xF2, 0x22, 0xE1, 0x31,
        0x83, 0x53, 0x90, 0x40, 0xA5, 0x75, 0xB6, 0x66,
        0xCF, 0x1F, 0xDC, 0x0C, 0xE9, 0x39, 0xFA, 0x2A,
        0x1B, 0xCB, 0x08, 0xD8, 0x3D, 0xED, 0x2E, 0xFE,
        0x57, 0x87, 0x44, 0x94, 0x71, 0xA1, 0x62, 0xB2,
        0xB5, 0x65, 0xA6, 0x76, 0x93, 0x43, 0x80, 0x50,
        0xF9, 0x29, 0xEA, 0x3A, 0xDF, 0x0F, 0xCC, 0x1C,
        0x2D, 0xFD, 0x3E, 0xEE, 0x0B, 0xDB, 0x18, 0xC8,
        0x61, 0xB1, 0x72, 0xA2, 0x47, 0x97, 0x54, 0x84,
        0x36, 0xE6, 0x25, 0xF5, 0x10, 0xC0, 0x03, 0xD3,
        0x7A, 0xAA, 0x69, 0xB9, 0x5C, 0x8C, 0x4F, 0x9F,
        0xAE, 0x7E, 0xBD, 0x6D, 0x88, 0x58, 0x9B, 0x4B,
        0xE2, 0x32, 0xF1, 0x21, 0xC4, 0x14, 0xD7, 0x07,
        0xD9, 0x09, 0xCA, 0x1A, 0xFF, 0x2F, 0xEC, 0x3C,
        0x95, 0x45, 0x86, 0x56, 0xB3, 0x63, 0xA0, 0x70,
        0x41, 0x91, 0x52, 0x82, 0x67, 0xB7, 0x74, 0xA4,
        0x0D, 0xDD, 0x1E, 0xCE, 0x2B, 0xFB, 0x38, 0xE8,
        0x5A, 0x8A, 0x49, 0x99, 0x7C, 0xAC, 0x6F, 0xBF,
        0x16, 0xC6, 0x05, 0xD5, 0x30, 0xE0, 0x23, 0xF3,
        0xC2, 0x12, 0xD1, 0x01, 0xE4, 0x34, 0xF7, 0x27,
        0x8E, 0x5E, 0x9D, 0x4D, 0xA8, 0x78, 0xBB, 0x6B,
        0x6C, 0xBC, 0x7F, 0xAF, 0x4A, 0x9A, 0x59, 0x89,
        0x20, 0xF0, 0x33, 0xE3, 0x06, 0xD6, 0x15, 0xC5,
        0xF4, 0x24, 0xE7, 0x37, 0xD2, 0x02, 0xC1, 0x11,
        0xB8, 0x68, 0xAB, 0x7B, 0x9E, 0x4E, 0x8D, 0x5D,
        0xEF, 0x3F, 0xFC, 0x2C, 0xC9, 0x19, 0xDA, 0x0A,
        0xA3, 0x73, 0xB0, 0x60, 0x85, 0x55, 0x96, 0x46,
        0x77, 0xA7, 0x64, 0xB4, 0x51, 0x81, 0x42, 0x92,
        0x3B, 0xEB, 0x28, 0xF8, 0x1D, 0xCD, 0x0E, 0xDE,
};
#endif /* CRC_8_LOOKUP_TABLE_H_ */
